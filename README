README for LTC with Maven 3
===========================

Requirements
------------

- Java 6 or higher
- git 1.7.2.2 or higher
- Maven 3
- JGraphT 0.8.2 in local Maven repository:

For the time being, you will have to install the supplied JGraphT library into your local Maven repository by hand:

$> mvn install:install-file -Dfile=lib/jgrapht-jdk1.6.jar \
   -DgroupId=org.jgrapht -DartifactId=jgrapht-jdk1.6 -Dversion=0.8.2 -Dpackaging=jar

which should produce a little bit of output containing "BUILD SUCCESS".  This step has to be done only once.


Developing
----------

Common Maven goals are:

$> mvn clean
$> mvn compile
$> mvn test

To create the site (with a link to download the JAR):

$> mvn verify site

If manual has new, externalized TikZ pictures, manually confert .pdf into .png (using Preview) under
  all/src/site/tex/manual/figures/manual-figure*.pdf

Before deploying, need to log into CSL Unix cluster to manually delete the directory ~linda/public_html/LTC/all!

$> mvn clean verify site site:deploy

To create the distributable:

$> mvn clean package

To skip tests (when running repeatedly):

$> mvn verify site -Dmaven.test.skip=true


Running
-------

after "mvn package verify"

a) Server

  After packaging or wherever you downloaded the JAR:

  $> java -jar all/target/LTC-<version>.jar

  To debug remotely on <PORT> (i.e., when using with Emacs ltc-mode):

  $> java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=<PORT> -jar all/target/LTC-<version>.jar

b) Java Editor

  $> java -cp all/target/LTC-<version>.jar com.sri.ltc.editor.LTCEditor -h

c) Utilities

  $> java -cp all/target/LTC-<version>.jar com.sri.ltc.latexdiff.Lexer <FILE>
  or
  $> cat <FILE> | java -cp all/target/LTC-<version>.jar com.sri.ltc.latexdiff.Lexer

  $> java -cp all/target/LTC-<version>.jar com.sri.ltc.latexdiff.LatexDiff -h

  $> java -cp all/target/LTC-<version>.jar com.sri.ltc.server.HelloLTC -h


Testing
-------

$> mvn test


Git Repositories etc.
---------------------

a) bundling git repositories for download as examples.  See:
  http://stackoverflow.com/questions/2545765/how-can-i-email-someone-a-git-repository
  http://progit.org/2010/03/10/bundles.html

  $> cd independence
  $> git bundle create ../independence.bundle --all
  $> cd $Tutorial
  $> git clone ../LTCmanual/independence.bundle independence


Building manual by hand
-----------------------

$> cd all/src/site/tex/manual
$> pdflatex manual -shell-escape
$> convert -density 300 manual-figure0.pdf manual-figure0.png
or
$> for i in manual-figure*.pdf; do convert -density 300 $i `echo $i | sed -e 's/\.pdf/\.png/g'`; done
or use Preview.app?
$> htlatex manual "manual,0,png" "" "" "-interaction=nonstopmode --src-specials"

converting other .tiff files in bulk (use wildcard appropriately)
$> for file in *.tiff; do convert $file `basename $file .tiff`.png; done


Incrementing version number
---------------------------

First, in parent pom.xml and then in all children.


Building Tech Report 2012
-------------------------

$> mvn verify site   => generate examples for appendices
$> cd all/src/tex/techreport2012
$> pdflatex techreport2012
$> pdflatex techreport2012
$> bibtex techreport2012
$> pdflatex techreport2012
$> pdflatex techreport2012


Programming Emacs mode
----------------------

Cursor position: C-x =

Interactive Emacs Lisp: M-x ielm

